image: ruby
include:
  template: Dependency-Scanning.gitlab-ci.yml


cache:
  paths:
    - vendor/bundle

stages:
 - build
 - test
 - deploy
 - clear


build:
  stage: build
  artifacts:
     paths:
     - /builds/Cyb3r-Jak3/blog/_site/* 
  script:
    - gem install bundler
    - bundle install --path vendor/bundle
    - bundle exec jekyll build

test:
  stage: test
  dependencies:
  - build
  script:
    - gem install bundler
    - bundle install --path vendor/bundle
    - bundle exec htmlproofer /builds/Cyb3r-Jak3/blog/_site/ --url-ignore "/#.*/" --disable_external

.deploy:
  image: cyb3rjak3/docker-curl-ssh
  before_script:
   - eval $(ssh-agent -s)
   - echo "$SSH_P_KEY" | tr -d '\r' | ssh-add - > /dev/null
   - mkdir -p ~/.ssh
   - chmod 700 ~/.ssh
   - cat $SSH_KNOWN > ~/.ssh/known_hosts
   - chmod 644 ~/.ssh/known_hosts
  script:
  - scp -rp -P 2222 /builds/Cyb3r-Jak3/blog/_site/*  $DeployUser@$ServerIP:$RPath

deploy_manual:
  extends: .deploy
  stage: deploy
  dependencies:
   - build
   - test
  environment:
    name: Self_Host
    url: https://blog.jwhite.network
  when: manual
  except:
   - schedules

deploy_schedule:
  extends: .deploy
  stage: deploy
  dependencies:
   - build
   - test
  environment:
    name: Self_Host
    url: https://blog.jwhite.network
  only:
   - schedules

Clear_Cache:
  image: cyb3rjak3/docker-curl-ssh
  stage: clear
  dependencies:
  - deploy
  script:
  - curl -X POST "https://api.cloudflare.com/client/v4/zones/$ZONE/purge_cache" -H "X-Auth-Email: $API_EMAIL" -H "$API_KEY" -H "Content-Type: application/json" --data '{"files":["https://blog.jwhite.network/*"]}'